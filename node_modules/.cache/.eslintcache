[{"/Users/wongsatornboonpeng/Desktop/kmutnb-security/src/index.js":"1","/Users/wongsatornboonpeng/Desktop/kmutnb-security/src/App.js":"2","/Users/wongsatornboonpeng/Desktop/kmutnb-security/src/reportWebVitals.js":"3","/Users/wongsatornboonpeng/Desktop/kmutnb-security/src/GoogleMapCom.js":"4","/Users/wongsatornboonpeng/Desktop/kmutnb-security/src/Login.js":"5"},{"size":854,"mtime":1681945164008,"results":"6","hashOfConfig":"7"},{"size":341,"mtime":1681945030137,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1681943067791,"results":"9","hashOfConfig":"7"},{"size":3631,"mtime":1682674105930,"results":"10","hashOfConfig":"7"},{"size":1165,"mtime":1681945661931,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1xbxlq7",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/wongsatornboonpeng/Desktop/kmutnb-security/src/index.js",["29"],[],"/Users/wongsatornboonpeng/Desktop/kmutnb-security/src/App.js",["30"],[],"/Users/wongsatornboonpeng/Desktop/kmutnb-security/src/reportWebVitals.js",[],[],[],"/Users/wongsatornboonpeng/Desktop/kmutnb-security/src/GoogleMapCom.js",["31","32","33","34","35"],[],"import {\n  GoogleMap,\n  InfoWindowF,\n  MarkerF,\n  InfoWindow,\n  Marker,\n  LoadScript,\n} from \"@react-google-maps/api\";\nimport React, { useEffect, useState } from \"react\";\n// import ImageTask from \"./ImageTask\";\nimport axios from \"axios\";\n\nconst logo = require(\"./image/bus.png\");\n\nlet lastPosition, lastTime;\nlet isRunning = false;\n\nfunction GoogleMapCom({ tasks }) {\n  const [dataCar, setDataCar] = useState([]);\n\n  const getDataLocationCar = () => {\n    axios\n      .post(\"http://192.168.1.5:3001/web/user/getLocationCar\", {}) // เปลี่ยน IP เป็น Local IP ห้ามใช้ Localhost\n      .then((res) => {\n        let { status, result } = res.data;\n        console.log(res.data);\n        status && setDataCar(result);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      getDataLocationCar();\n    }, 2000);\n    return () => clearInterval(interval);\n  }, []);\n\n  function calcDistance(pos1, pos2) {\n    const R = 6371e3; // radius of Earth in meters\n    const lat1 = pos1.lat * (Math.PI / 180);\n    const lat2 = pos2.lat * (Math.PI / 180);\n    const deltaLat = (pos2.lat - pos1.lat) * (Math.PI / 180);\n    const deltaLng = (pos2.lng - pos1.lng) * (Math.PI / 180);\n\n    const a =\n      Math.sin(deltaLat / 2) * Math.sin(deltaLat / 2) +\n      Math.cos(lat1) *\n        Math.cos(lat2) *\n        Math.sin(deltaLng / 2) *\n        Math.sin(deltaLng / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n    const distance = R * c;\n    return distance;\n  }\n\n  const handlePositionUpdate = (latitude, longitude) => {\n    const currentTime = Date.now();\n    const currentLocation = {\n      lat: latitude,\n      lng: longitude,\n    };\n\n    if (lastPosition) {\n      const distance = calcDistance(lastPosition, currentLocation);\n      const timeDiff = (currentTime - lastTime) / 1000; // convert to seconds\n      const speed = distance / timeDiff; // in meters per second\n\n      if (speed > 10) {\n        console.log(\"Car is running\");\n        return isRunning = true;\n      } else {\n        console.log(\"Car is not running\");\n        return isRunning = false;\n      }\n    }\n\n    lastPosition = currentLocation;\n    lastTime = currentTime;\n  };\n\n  return (\n    <>\n      <LoadScript googleMapsApiKey=\"AIzaSyBHBTkH9fICG5hTL1xNFkyLXaQGyZU6fek\">\n        <GoogleMap\n          options={{\n            streetViewControl: true,\n            zoom: 15,\n            center: { lat: 14.162782696749133, lng: 101.35487649815568 },\n          }}\n          mapContainerStyle={{ width: \"100vw\", height: \"100vh\" }}\n        >\n          {dataCar.map((val, idx) => {\n            return (\n              <MarkerF\n                key={idx}\n                position={{ lat: val.driver_lat, lng: val.driver_long }}\n                icon={{ url: `${logo}`, scaledSize: { width: 72, height: 72 } }}\n              >\n                <InfoWindow\n                  position={{ lat: val.driver_lat, lng: val.driver_long }}\n                >\n                  <>\n                    {handlePositionUpdate(val.driver_lat, val.driver_long) == true && (\n                      <div style={{ color: \"black\" }}>กำลังวิ่ง</div>\n                    )}\n                    {handlePositionUpdate(val.driver_lat, val.driver_long) == false && (\n                      <div style={{ color: \"black\" }}>จอดอยู่</div>\n                    )}\n                  </>\n                </InfoWindow>\n              </MarkerF>\n            );\n          })}\n        </GoogleMap>\n      </LoadScript>\n    </>\n  );\n}\n\nexport default GoogleMapCom;\n","/Users/wongsatornboonpeng/Desktop/kmutnb-security/src/Login.js",["36","37","38"],[],{"ruleId":"39","severity":1,"message":"40","line":4,"column":8,"nodeType":"41","messageId":"42","endLine":4,"endColumn":11},{"ruleId":"39","severity":1,"message":"43","line":1,"column":8,"nodeType":"41","messageId":"42","endLine":1,"endColumn":12},{"ruleId":"39","severity":1,"message":"44","line":3,"column":3,"nodeType":"41","messageId":"42","endLine":3,"endColumn":14},{"ruleId":"39","severity":1,"message":"45","line":6,"column":3,"nodeType":"41","messageId":"42","endLine":6,"endColumn":9},{"ruleId":"39","severity":1,"message":"46","line":16,"column":5,"nodeType":"41","messageId":"42","endLine":16,"endColumn":14},{"ruleId":"47","severity":1,"message":"48","line":107,"column":76,"nodeType":"49","messageId":"50","endLine":107,"endColumn":78},{"ruleId":"47","severity":1,"message":"48","line":110,"column":76,"nodeType":"49","messageId":"50","endLine":110,"endColumn":78},{"ruleId":"39","severity":1,"message":"51","line":3,"column":27,"nodeType":"41","messageId":"42","endLine":3,"endColumn":33},{"ruleId":"39","severity":1,"message":"52","line":3,"column":35,"nodeType":"41","messageId":"42","endLine":3,"endColumn":41},{"ruleId":"39","severity":1,"message":"53","line":3,"column":43,"nodeType":"41","messageId":"42","endLine":3,"endColumn":48},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'InfoWindowF' is defined but never used.","'Marker' is defined but never used.","'isRunning' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used."]