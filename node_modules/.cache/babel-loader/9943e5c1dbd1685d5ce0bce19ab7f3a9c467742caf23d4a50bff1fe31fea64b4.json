{"ast":null,"code":"var _jsxFileName = \"/Users/wongsatornboonpeng/Desktop/kmutnb-security/src/GoogleMapCom.js\",\n  _s = $RefreshSig$();\nimport { GoogleMap, InfoWindowF, MarkerF, InfoWindow, Marker, LoadScript } from \"@react-google-maps/api\";\nimport React, { useEffect, useState } from \"react\";\n// import ImageTask from \"./ImageTask\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst logo = require(\"./image/bus.png\");\nfunction GoogleMapCom(_ref) {\n  _s();\n  let {\n    tasks\n  } = _ref;\n  const [dataCar, setDataCar] = useState([]);\n  const getDataLocationCar = () => {\n    axios.post(\"http://192.168.1.5:3001/web/user/getLocationCar\", {}).then(res => {\n      let {\n        status,\n        result\n      } = res.data;\n      console.log(res.data);\n      status && setDataCar(result);\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n  useEffect(() => {\n    const interval = setInterval(() => {\n      getDataLocationCar();\n    }, 2000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // const handleOnLoad = (map) => {\n  //   const bounds = new google.maps.LatLngBounds();\n  //   markers.forEach(({ position }) => bounds.extend(position));\n  //   map.fitBounds(bounds);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: \"AIzaSyBHBTkH9fICG5hTL1xNFkyLXaQGyZU6fek\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        options: {\n          streetViewControl: true,\n          zoom: 16,\n          center: {\n            lat: 14.162782696749133,\n            lng: 101.35487649815568\n          }\n        }\n        // onLoad={handleOnLoad}\n        // center={{ lat: 14.162782696749133, lng: 101.35487649815568 }}\n        // onClick={() => setActiveMarker(null)}\n        ,\n        mapContainerStyle: {\n          width: \"100vw\",\n          height: \"100vh\"\n        },\n        children: dataCar.map((val, idx) => /*#__PURE__*/_jsxDEV(MarkerF, {\n          position: {\n            lat: val.driver_lat,\n            lng: val.driver_long\n          }\n          // onClick={() => handleActiveMarker(_id)}\n          ,\n          icon: {\n            url: `${logo}`,\n            scaledSize: {\n              width: 72,\n              height: 72\n            }\n          }\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(GoogleMapCom, \"APzcgwrUJktVuprHjUHt21ub7Gg=\");\n_c = GoogleMapCom;\nexport default GoogleMapCom;\nvar _c;\n$RefreshReg$(_c, \"GoogleMapCom\");","map":{"version":3,"names":["GoogleMap","InfoWindowF","MarkerF","InfoWindow","Marker","LoadScript","React","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","logo","require","GoogleMapCom","_ref","_s","tasks","dataCar","setDataCar","getDataLocationCar","post","then","res","status","result","data","console","log","catch","err","error","interval","setInterval","clearInterval","children","googleMapsApiKey","options","streetViewControl","zoom","center","lat","lng","mapContainerStyle","width","height","map","val","idx","position","driver_lat","driver_long","icon","url","scaledSize","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/wongsatornboonpeng/Desktop/kmutnb-security/src/GoogleMapCom.js"],"sourcesContent":["import {\n  GoogleMap,\n  InfoWindowF,\n  MarkerF,\n  InfoWindow,\n  Marker,\n  LoadScript,\n} from \"@react-google-maps/api\";\nimport React, { useEffect, useState } from \"react\";\n// import ImageTask from \"./ImageTask\";\nimport axios from \"axios\";\n\nconst logo = require(\"./image/bus.png\");\nfunction GoogleMapCom({ tasks }) {\n  const [dataCar, setDataCar] = useState([]);\n\n  const getDataLocationCar = () => {\n    axios\n      .post(\"http://192.168.1.5:3001/web/user/getLocationCar\", {})\n      .then((res) => {\n        let { status, result } = res.data;\n        console.log(res.data);\n        status && setDataCar(result);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      getDataLocationCar();\n    }, 2000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // const handleOnLoad = (map) => {\n  //   const bounds = new google.maps.LatLngBounds();\n  //   markers.forEach(({ position }) => bounds.extend(position));\n  //   map.fitBounds(bounds);\n  // };\n\n  return (\n    <>\n      <LoadScript googleMapsApiKey=\"AIzaSyBHBTkH9fICG5hTL1xNFkyLXaQGyZU6fek\">\n        <GoogleMap\n          options={{\n            streetViewControl: true,\n            zoom: 16,\n            center: { lat: 14.162782696749133, lng: 101.35487649815568 },\n          }}\n          // onLoad={handleOnLoad}\n          // center={{ lat: 14.162782696749133, lng: 101.35487649815568 }}\n          // onClick={() => setActiveMarker(null)}\n          mapContainerStyle={{ width: \"100vw\", height: \"100vh\" }}\n        >\n          {dataCar.map((val, idx) => (\n            <MarkerF\n              key={idx}\n              position={{ lat: val.driver_lat, lng: val.driver_long }}\n              // onClick={() => handleActiveMarker(_id)}\n              icon={{ url: `${logo}`, scaledSize: { width: 72, height: 72 } }}\n            >\n              {/* <InfoWindow>\n                <div style={{ color: \"black\" }}>Infowindow texte</div>\n              </InfoWindow> */}\n            </MarkerF>\n          ))}\n        </GoogleMap>\n      </LoadScript>\n    </>\n  );\n}\n\nexport default GoogleMapCom;\n"],"mappings":";;AAAA,SACEA,SAAS,EACTC,WAAW,EACXC,OAAO,EACPC,UAAU,EACVC,MAAM,EACNC,UAAU,QACL,wBAAwB;AAC/B,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD;AACA,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,IAAI,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AACvC,SAASC,YAAYA,CAAAC,IAAA,EAAY;EAAAC,EAAA;EAAA,IAAX;IAAEC;EAAM,CAAC,GAAAF,IAAA;EAC7B,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMc,kBAAkB,GAAGA,CAAA,KAAM;IAC/Bb,KAAK,CACFc,IAAI,CAAC,iDAAiD,EAAE,CAAC,CAAC,CAAC,CAC3DC,IAAI,CAAEC,GAAG,IAAK;MACb,IAAI;QAAEC,MAAM;QAAEC;MAAO,CAAC,GAAGF,GAAG,CAACG,IAAI;MACjCC,OAAO,CAACC,GAAG,CAACL,GAAG,CAACG,IAAI,CAAC;MACrBF,MAAM,IAAIL,UAAU,CAACM,MAAM,CAAC;IAC9B,CAAC,CAAC,CACDI,KAAK,CAAEC,GAAG,IAAK;MACdH,OAAO,CAACI,KAAK,CAACD,GAAG,CAAC;IACpB,CAAC,CAAC;EACN,CAAC;EAEDzB,SAAS,CAAC,MAAM;IACd,MAAM2B,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCb,kBAAkB,EAAE;IACtB,CAAC,EAAE,IAAI,CAAC;IACR,OAAO,MAAMc,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;;EAEA,oBACEvB,OAAA,CAAAE,SAAA;IAAAwB,QAAA,eACE1B,OAAA,CAACN,UAAU;MAACiC,gBAAgB,EAAC,yCAAyC;MAAAD,QAAA,eACpE1B,OAAA,CAACX,SAAS;QACRuC,OAAO,EAAE;UACPC,iBAAiB,EAAE,IAAI;UACvBC,IAAI,EAAE,EAAE;UACRC,MAAM,EAAE;YAAEC,GAAG,EAAE,kBAAkB;YAAEC,GAAG,EAAE;UAAmB;QAC7D;QACA;QACA;QACA;QAAA;QACAC,iBAAiB,EAAE;UAAEC,KAAK,EAAE,OAAO;UAAEC,MAAM,EAAE;QAAQ,CAAE;QAAAV,QAAA,EAEtDjB,OAAO,CAAC4B,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,kBACpBvC,OAAA,CAACT,OAAO;UAENiD,QAAQ,EAAE;YAAER,GAAG,EAAEM,GAAG,CAACG,UAAU;YAAER,GAAG,EAAEK,GAAG,CAACI;UAAY;UACtD;UAAA;UACAC,IAAI,EAAE;YAAEC,GAAG,EAAG,GAAEzC,IAAK,EAAC;YAAE0C,UAAU,EAAE;cAAEV,KAAK,EAAE,EAAE;cAAEC,MAAM,EAAE;YAAG;UAAE;QAAE,GAH3DG,GAAG;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QASX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACQ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACD,iBACZ;AAEP;AAAC1C,EAAA,CA3DQF,YAAY;AAAA6C,EAAA,GAAZ7C,YAAY;AA6DrB,eAAeA,YAAY;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}